version: "3.7"
services:
  app:
    build: .
    ports:
      - "${PORT}:${PORT}"
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  postgres:
    image: postgres:13
    ports:
      - "${PGPORT}:${PGPORT}"
    env_file:
      - .env
    volumes:
      # - "./initdb.d:/docker-entrypoint-initdb.d"
      - musicapidata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U developer"]
      interval: 5s
      timeout: 5s
      retries: 5
  redis:
    image: redis:6
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli","ping"]
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    env_file:
      - .env
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
  migration:
    build:
      context: .
    env_file:
      - .env
    command:
      [
        "npm",
        "run",
        "migrate",
        "up"
      ]
    links:
      - postgres
    depends_on:
      postgres:
        condition: service_healthy
volumes:
  musicapidata: